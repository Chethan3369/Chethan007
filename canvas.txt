import { useEffect, useRef } from "react";
import { Canvas } from "@react-three/fiber";
import { OrbitControls } from "@react-three/drei";
import { Suspense } from "react";
import dynamic from "next/dynamic"; // Use if working in Next.js
import Loading from "../Loading";
import Model from "../Model";

// Only import gsap in a browser environment
let gsap, ScrollTrigger;
if (typeof window !== "undefined") {
  gsap = require("gsap").gsap;
  ScrollTrigger = require("gsap/ScrollTrigger").ScrollTrigger;
  gsap.registerPlugin(ScrollTrigger);
}

const CanvasContainer = () => {
  const canvasRef = useRef(null);

  useEffect(() => {
    if (!ScrollTrigger || !canvasRef.current) return;

    const canvasElement = canvasRef.current;

    // Create the ScrollTrigger for canvas visibility
    const scrollTriggerInstance = ScrollTrigger.create({
      trigger: ".seven-section", // Animation triggers based on this section
      start: "bottom bottom", // Start when the bottom of the section hits the bottom of the viewport
      onEnter: () => {
        gsap.to(canvasElement, { opacity: 0, duration: 0.5 }); // Fade out
      },
      onLeaveBack: () => {
        gsap.to(canvasElement, { opacity: 1, duration: 0.5 }); // Fade in when scrolling back up
      },
    });

    return () => {
      scrollTriggerInstance.kill(); // Cleanup on unmount
    };
  }, []);

  return (
    <div>
      <Canvas
        ref={canvasRef}
        style={{ opacity: 1, height: "100%", width: "100%" }} // Initial styles
        camera={{
          position: [4.7429, 2.2387, 1.2218], // Camera position
        }}
        shadows
      >
        <OrbitControls enablePan={false} enableRotate={true} enableZoom={false} />
        <Suspense fallback={<Loading />}>
          <Model />
        </Suspense>
      </Canvas>
    </div>
  );
};

// Export for Vev editor registration
export default CanvasContainer;
