import React, { useRef, useState } from "react";
import { Canvas } from "@react-three/fiber";
import { OrbitControls, useGLTF } from "@react-three/drei";

const DraggableModel = () => {
  const { scene } = useGLTF("/path-to-your/model.glb"); // Load your .glb model
  const modelRef = useRef();
  const [dragging, setDragging] = useState(false);

  const handlePointerDown = (e) => {
    e.stopPropagation();
    setDragging(true);
  };

  const handlePointerMove = (e) => {
    if (dragging && modelRef.current) {
      modelRef.current.position.x += e.movementX * 0.01; // Adjust drag sensitivity
      modelRef.current.position.y -= e.movementY * 0.01;
    }
  };

  const handlePointerUp = () => {
    setDragging(false);
  };

  return (
    <Canvas
      camera={{ position: [0, 2, 5], fov: 40 }}
      onPointerMove={handlePointerMove}
      onPointerUp={handlePointerUp}
    >
      <ambientLight intensity={0.5} />
      <spotLight position={[10, 10, 10]} />
      <primitive
        object={scene}
        ref={modelRef}
        onPointerDown={handlePointerDown}
        scale={[1, 1, 1]}
      />
      <OrbitControls enablePan={!dragging} enableRotate={!dragging} />
    </Canvas>
  );
};

export default DraggableModel;

